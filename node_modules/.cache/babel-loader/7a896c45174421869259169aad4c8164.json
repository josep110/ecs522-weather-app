{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/FiveDayForecast.js\";\nimport React from 'react';\nimport Card from './Card';\n\nclass FiveDayForecast extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: [],\n      location: \"zip=10302\",\n      city: \"New York\",\n      country: \"US\",\n      degreeType: \"imperial\"\n    };\n\n    this.componentDidMount = () => {\n      const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?${this.state.location}${this.state.country}&units=${this.state.degreeType}&APPID=e5f8ee9342a7aa4b3e39a90cf5a9e97f`;\n      fetch(weatherURL).then(res => res.json()).then(data => {\n        // data returned by API output to console\n        console.log(\"Data List Loaded\", data.list); // filter data for time 18:00\n\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.setState({\n          days: dailyData\n        });\n      });\n    };\n\n    this.formatCards = () => {\n      return this.state.days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n        day: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 48\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-1 jumbotron\",\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"display-5 text-muted\",\n        children: this.state.city + \", \" + this.state.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        id: \"row justify-content-center\",\n        children: this.formatCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FiveDayForecast;","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/FiveDayForecast.js"],"names":["React","Card","FiveDayForecast","Component","state","days","location","city","country","degreeType","componentDidMount","weatherURL","fetch","then","res","json","data","console","log","list","dailyData","filter","reading","dt_txt","includes","setState","formatCards","map","day","index","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAAA;AAAA;AAAA,SAG5CC,KAH4C,GAGpC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE,WAFJ;AAGNC,MAAAA,IAAI,EAAE,UAHA;AAINC,MAAAA,OAAO,EAAE,IAJH;AAKNC,MAAAA,UAAU,EAAE;AALN,KAHoC;;AAAA,SAW5CC,iBAX4C,GAWxB,MAAM;AACxB,YAAMC,UAAU,GAAI,mDAAkD,KAAKP,KAAL,CAAWE,QAAS,GAAE,KAAKF,KAAL,CAAWI,OAAQ,UAAS,KAAKJ,KAAL,CAAWK,UAAW,yCAA9I;AACAG,MAAAA,KAAK,CAACD,UAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAI,CAACG,IAArC,EAFY,CAGZ;;AACA,cAAMC,SAAS,GAAGJ,IAAI,CAACG,IAAL,CAAUE,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;AACA,aAAKC,QAAL,CAAc;AAACpB,UAAAA,IAAI,EAAEe;AAAP,SAAd;AACD,OARD;AASD,KAtB2C;;AAAA,SAyB5CM,WAzB4C,GAyB9B,MAAM;AAClB,aAAO,KAAKtB,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,IAAD;AAAM,QAAA,GAAG,EAAED;AAAX,SAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA,cAApC,CAAP;AACD,KA3B2C;AAAA;;AA+B5CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA,kBAAsC,KAAK1B,KAAL,CAAWG,IAAX,GAAgB,IAAhB,GAAqB,KAAKH,KAAL,CAAWI;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,EAAE,EAAC,4BAA/C;AAAA,kBAEG,KAAKkB,WAAL;AAFH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA3C2C;;AA8C9C,eAAexB,eAAf","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nclass FiveDayForecast extends React.Component {\n  //TODO: take location, unit etc. from settings\n  \n  state = {\n    days: [],\n    location: \"zip=10302\",\n    city: \"New York\",\n    country: \"US\",\n    degreeType: \"imperial\"\n  }\n\n  componentDidMount = () => {\n    const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?${this.state.location}${this.state.country}&units=${this.state.degreeType}&APPID=e5f8ee9342a7aa4b3e39a90cf5a9e97f`;\n    fetch(weatherURL)\n    .then(res => res.json())\n    .then(data => {\n      // data returned by API output to console\n      console.log(\"Data List Loaded\", data.list)\n      // filter data for time 18:00\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n      this.setState({days: dailyData})\n    })\n  }\n\n  // Card element (Card.js) returned for each day from API\n  formatCards = () => {\n    return this.state.days.map((day, index) => <Card day={day} key={index}/>)\n  }\n\n\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-1 jumbotron\">5-Day Forecast</h1>\n        <h5 className=\"display-5 text-muted\">{this.state.city+\", \"+this.state.country}</h5>\n        <div className=\"row justify-content-center\" id='row justify-content-center'>\n\n          {this.formatCards()}\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FiveDayForecast;\n"]},"metadata":{},"sourceType":"module"}