{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport './Home.css';\nimport hand from \"./icons/hand.ico\";\nimport locpin from \"./icons/pin.ico\";\nimport calendar from \"./icons/calendar.ico\";\nimport moment from \"moment\";\nimport React from 'react';\nimport weatherIcon from \"./icons/rain&sun.ico\";\nimport ideaIcon from \"./icons/idea.ico\";\nimport profileIco from \"./icons/profile.ico\";\nimport { useEffect, useState } from \"react\";\nimport map from \"./icons/map.ico\"; //function that creates icons with textx used in the home page\n\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: props.Icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"iconText\",\n      children: props.Text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Item;\nconst API_KEY = \"c49b58637f116ba62e71ca04a520f9bb\";\nconst API_URL = 'https://api.openweathermap.org/data/2.5'; //home page function\n\nfunction Home(props) {\n  _s();\n\n  // variables to store longitude, latitude and weather data \n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]); //using the useEffect hook to perform side effects like fetching location and weather data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&appid=${API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n\n    fetchData();\n  }, [lat, long]); //recommend a plan from a predtermined list according to weather id     \n\n  function get_plan(rangeId) {\n    var sunnyPlans = [\"Go to the park!\", \"Have a picnik!\", \"Grab a bite in a terrace!\", \"Go cycling!\"];\n    var stormPlans = [\"Try to stay indoors\", \"Seek sheldter\"];\n    var rainPlans = [\"Grab an umbrella!\", \"Bake some cookies!\", \"Go to a museums!\", \"Watch a film!\"];\n    var plansSnow = [\"Go skying!\", \"Go ice skating!\", \"Go sledding!\", \"Build a snowman!\"];\n    var fogPlans = [\"Reduced visivility ourdoors\", \"Try not to drive\", \"\"];\n\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        return stormPlans[Math.floor(Math.random() * stormPlans.length)];\n\n      case rangeId >= 300 && rangeId <= 321:\n        return rainPlans[Math.floor(Math.random() * rainPlans.length)];\n\n      case rangeId >= 500 && rangeId <= 531:\n        return rainPlans[Math.floor(Math.random() * rainPlans.length)];\n\n      case rangeId >= 600 && rangeId <= 622:\n        return plansSnow[Math.floor(Math.random() * plansSnow.length)];\n\n      case rangeId >= 701 && rangeId <= 781:\n        return fogPlans[Math.floor(Math.random() * fogPlans.length)];\n\n      case rangeId === 800:\n        return sunnyPlans[Math.floor(Math.random() * sunnyPlans.length)];\n\n      case rangeId >= 801 && rangeId <= 804:\n        return sunnyPlans[Math.floor(Math.random() * sunnyPlans.length)];\n\n      default:\n        return sunnyPlans[Math.floor(Math.random() * sunnyPlans.length)];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greeting-box \",\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            Icon: hand,\n            Text: props.Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            Icon: locpin,\n            Text: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-box\",\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            Icon: calendar,\n            Text: moment().format(\"dddd\" + 'LL')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-box\",\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            Icon: ideaIcon,\n            Text: get_plan(data.weather[0].id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"icon-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"Todayweather\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon-weather\",\n          src: weatherIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"Profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon-profile\",\n          src: profileIco\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Home, \"gE/fZZ7pzRi/f0KiE3Gj1Ld/pxs=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Home.js"],"names":["hand","locpin","calendar","moment","React","weatherIcon","ideaIcon","profileIco","useEffect","useState","map","Item","props","Icon","Text","API_KEY","API_URL","Home","lat","setLat","long","setLong","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","console","log","get_plan","rangeId","sunnyPlans","stormPlans","rainPlans","plansSnow","fogPlans","Math","floor","random","length","Message","name","format","weather","id"],"mappings":"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","sourcesContent":["\nimport'./Home.css';\nimport hand from\"./icons/hand.ico\";\nimport locpin from \"./icons/pin.ico\";\nimport calendar from \"./icons/calendar.ico\";\nimport moment from \"moment\";\nimport React from 'react';\nimport weatherIcon from \"./icons/rain&sun.ico\"\nimport ideaIcon from \"./icons/idea.ico\"\nimport profileIco from \"./icons/profile.ico\"\nimport {useEffect, useState} from \"react\";\nimport map from \"./icons/map.ico\"\n\n//function that creates icons with textx used in the home page\nfunction Item(props){\n      return(\n            <div className=\"item-box\">\n            <img className=\"icon\" src={props.Icon}></img>\n            <span className=\"iconText\">{props.Text}</span>\n            </div>)\n}\n\n      \n         \nconst API_KEY = \"c49b58637f116ba62e71ca04a520f9bb\";\nconst API_URL='https://api.openweathermap.org/data/2.5';\n\n\n\n//home page function\n    function Home (props){\n\n      // variables to store longitude, latitude and weather data \n      const [lat, setLat] = useState([]);\n      const [long, setLong] = useState([]);\n      const [data, setData] = useState([]);\n\n\n      //using the useEffect hook to perform side effects like fetching location and weather data\n      useEffect(() => {\n        const fetchData = async () => {\n          navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude);\n            setLong(position.coords.longitude);\n          });\n\n          await fetch(`${API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&appid=${API_KEY}`)\n          .then(res => res.json())\n          .then(result => {\n            setData(result)\n            console.log(result);\n          });\n        }\n        fetchData();\n      }, [lat,long])\n\n\n      //recommend a plan from a predtermined list according to weather id     \n      function get_plan(rangeId) {\n            var sunnyPlans=[\"Go to the park!\",\"Have a picnik!\",\"Grab a bite in a terrace!\",\"Go cycling!\"]\n            var stormPlans=[\"Try to stay indoors\",\"Seek sheldter\"]\n            var rainPlans=[\"Grab an umbrella!\",\"Bake some cookies!\",\"Go to a museums!\",\"Watch a film!\"]\n            var plansSnow=[\"Go skying!\",\"Go ice skating!\",\"Go sledding!\",\"Build a snowman!\"]\n            var fogPlans=[\"Reduced visivility ourdoors\",\"Try not to drive\",\"\"]\n            switch (true) {\n              case rangeId >= 200 && rangeId < 232: \n                    return(stormPlans[Math.floor(Math.random()*stormPlans.length)])\n              case rangeId >= 300 && rangeId <= 321:     \n                return(rainPlans[Math.floor(Math.random()*rainPlans.length)]);\n              case rangeId >= 500 && rangeId <= 531:\n                  return(rainPlans[Math.floor(Math.random()*rainPlans.length)]);\n              case rangeId >= 600 && rangeId <= 622:  \n                    return(plansSnow[Math.floor(Math.random()*plansSnow.length)]);\n              case rangeId >= 701 && rangeId <= 781:  \n                  return(fogPlans[Math.floor(Math.random()*fogPlans.length)]);\n              case rangeId === 800:  \n                  return(sunnyPlans[Math.floor(Math.random()*sunnyPlans.length)]);\n              case rangeId >= 801 && rangeId <= 804:\n                  return(sunnyPlans[Math.floor(Math.random()*sunnyPlans.length)]);\n              default:\n                    return(sunnyPlans[Math.floor(Math.random()*sunnyPlans.length)]);\n            }\n          }\n      \n      return(\n            <div className=\"home-container\">\n\n                  <div className=\"container\">\n                        <div className=\"header-box\">\n                        <div className=\"greeting-box \"><Item  Icon={hand} Text={props.Message}></Item></div>\n                        <div className=\"location-box\"><Item  Icon={locpin} Text={data.name}></Item></div>\n                        <div className=\"date-box\"><Item  Icon={calendar} Text={moment().format(\"dddd\"+'LL')}></Item></div>\n                        <div className=\"plan-box\"><Item  Icon={ideaIcon} Text={get_plan(data.weather[0].id)}></Item></div>\n                        </div>\n     \n                  </div>\n                  <footer className=\"icon-box\">\n                              <a href=\"Todayweather\"><img className=\"icon-weather\" src={weatherIcon}></img></a>\n                              <a href=\"Profile\"><img className=\"icon-profile\" src={profileIco}></img></a>\n                        </footer>\n            </div>\n\n            )\n      \n\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}