{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Today.js\";\nimport React from 'react';\nimport moment from \"moment\";\nimport windIncon from \"./icons/wind2.ico\";\nimport humidity from \"./icons/waterdrop.ico\";\nimport precipitation from \"./icons/rain.ico\";\nimport Todayweather from \"./Todayweather\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\";\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from \"./icons/rain.ico\";\n\nfunction get_WeatherIcon(rangeId) {\n  switch (true) {\n    case rangeId >= 200 && rangeId < 232:\n      return stormIcon;\n\n    case rangeId >= 300 && rangeId <= 321:\n      return rainyIcon;\n\n    case rangeId >= 500 && rangeId <= 521:\n      return rainyIcon;\n\n    case rangeId >= 600 && rangeId <= 622:\n      return snowIcon;\n\n    case rangeId >= 701 && rangeId <= 781:\n      return hazeIcon;\n\n    case rangeId === 800:\n      return sunIcon;\n\n    case rangeId >= 801 && rangeId <= 804:\n      return precipitation;\n\n    default:\n      return cloudIcon;\n      ;\n  }\n}\n\nclass Today extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: \"New York\",\n      degreeType: \"imperial\",\n      temp: null,\n      lat: 51.51549,\n      lon: -0.12635,\n      wind: null,\n      description: null,\n      humidity: null,\n      rangeId: null,\n      metric: null\n    };\n\n    this.getData = () => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather/?lat=${this.statelat}&lon=${this.state.lon}&units=metric&appid=c49b58637f116ba62e71ca04a520f9bb`).then(res => res.json()).then(result => {\n        console.log(result);\n        this.setState({\n          city: result.name\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Todayweather, {\n      City: this.state.city,\n      temperature: this.state.temp,\n      Wind: this.state.wind,\n      Humidity: this.state.humidity,\n      Description: this.state.degreeType,\n      Icon: get_WeatherIcon(this.state.rangeId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this);\n  }\n\n}\n\nexport default Today;","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Today.js"],"names":["React","moment","windIncon","humidity","precipitation","Todayweather","hazeIcon","cloudIcon","stormIcon","snowIcon","sunIcon","rainyIcon","get_WeatherIcon","rangeId","Today","Component","state","city","degreeType","temp","lat","lon","wind","description","metric","getData","fetch","statelat","then","res","json","result","console","log","setState","name","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAqB,kBAArB;;AAMA,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC5B,UAAQ,IAAR;AACE,SAAKA,OAAO,IAAI,GAAX,IAAkBA,OAAO,GAAG,GAAjC;AACE,aAAOL,SAAP;;AACF,SAAKK,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAAlC;AACE,aAAOF,SAAP;;AACF,SAAKE,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAAlC;AACE,aAAOF,SAAP;;AACF,SAAKE,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAAlC;AACE,aAAOJ,QAAP;;AACF,SAAKI,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAAlC;AACE,aAAOP,QAAP;;AACF,SAAKO,OAAO,KAAK,GAAjB;AACE,aAAOH,OAAP;;AACF,SAAKG,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAAlC;AACE,aAAOT,aAAP;;AACF;AACE,aAAOG,SAAP;AAAkB;AAhBtB;AAkBD;;AAIL,MAAMO,KAAN,SAAoBd,KAAK,CAACe,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AACFC,MAAAA,IAAI,EAAE,UADJ;AAEFC,MAAAA,UAAU,EAAE,UAFV;AAGFC,MAAAA,IAAI,EAAC,IAHH;AAIFC,MAAAA,GAAG,EAAC,QAJF;AAKFC,MAAAA,GAAG,EAAC,CAAC,OALH;AAMFC,MAAAA,IAAI,EAAC,IANH;AAOJC,MAAAA,WAAW,EAAC,IAPR;AAQJpB,MAAAA,QAAQ,EAAC,IARL;AASJU,MAAAA,OAAO,EAAC,IATJ;AAUJW,MAAAA,MAAM,EAAC;AAVH,KADqB;;AAAA,SAiBzBC,OAjByB,GAiBhB,MAAM;AACZC,MAAAA,KAAK,CAAE,wDAAuD,KAAKC,QAAS,QAAO,KAAKX,KAAL,CAAWK,GAAI,sDAA7F,CAAL,CAEAO,IAFA,CAEKC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFZ,EAGFF,IAHE,CAGGG,MAAM,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAKG,QAAL,CAAc;AACRjB,UAAAA,IAAI,EAACc,MAAM,CAACI;AADJ,SAAd;AAGD,OARE;AASF,KA3BwB;AAAA;;AA8BzBC,EAAAA,MAAM,GAAE;AAEN,wBACM,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC,IAA/B;AAAqC,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,IAA7D;AAAmE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWM,IAApF;AAA0F,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWb,QAA/G;AAAyH,MAAA,WAAW,EAAE,KAAKa,KAAL,CAAWE,UAAjJ;AAAiK,MAAA,IAAI,EAAEN,eAAe,CAAC,KAAKI,KAAL,CAAWH,OAAZ;AAAtL;AAAA;AAAA;AAAA;AAAA,YADN;AAGE;;AAnCqB;;AAsCnC,eAAeC,KAAf","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport windIncon from \"./icons/wind2.ico\" ;\nimport humidity from \"./icons/waterdrop.ico\";\nimport precipitation from \"./icons/rain.ico\";\nimport Todayweather from \"./Todayweather\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\"\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from\"./icons/rain.ico\";\n\n\n\n\n\nfunction get_WeatherIcon(rangeId) {\n      switch (true) {\n        case rangeId >= 200 && rangeId < 232:\n          return(stormIcon);\n        case rangeId >= 300 && rangeId <= 321:\n          return(rainyIcon);\n        case rangeId >= 500 && rangeId <= 521:\n          return(rainyIcon);\n        case rangeId >= 600 && rangeId <= 622:\n          return(snowIcon);\n        case rangeId >= 701 && rangeId <= 781:\n          return(hazeIcon);\n        case rangeId === 800:\n          return(sunIcon);\n        case rangeId >= 801 && rangeId <= 804:\n          return(precipitation);\n        default:\n          return(cloudIcon);;\n      }\n    }\n\n\n\nclass Today extends React.Component{\n      state = {\n            city: \"New York\",\n            degreeType: \"imperial\",\n            temp:null,\n            lat:51.51549,\n            lon:-0.12635,\n            wind:null,\n          description:null,\n          humidity:null,\n          rangeId:null,\n          metric:null,\n          }\n\n\n          \n\n          getData= () => {\n             fetch(`https://api.openweathermap.org/data/2.5/weather/?lat=${this.statelat}&lon=${this.state.lon}&units=metric&appid=c49b58637f116ba62e71ca04a520f9bb`)\n            \n            .then(res => res.json())\n          .then(result => {\n            console.log(result);\n            this.setState({\n                  city:result.name\n            })\n          });\n          }\n\n\n          render(){\n \n            return (\n                  <Todayweather City={this.state.city} temperature={this.state.temp} Wind={this.state.wind} Humidity={this.state.humidity} Description={this.state.degreeType}     Icon={get_WeatherIcon(this.state.rangeId)}/>\n\n            )}\n}\n\nexport default Today;"]},"metadata":{},"sourceType":"module"}