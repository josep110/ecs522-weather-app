{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Todayweather.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport moment from \"moment\";\nimport windIncon from \"./icons/wind2.ico\";\nimport humidity from \"./icons/waterdrop.ico\";\nimport precipitation from \"./icons/rain.ico\";\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from \"./icons/rain.ico\";\nimport './Todayweather.css';\nimport { useEffect, useState } from \"react\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\";\nconst API_KEY = \"c49b58637f116ba62e71ca04a520f9bb\";\nconst API_URL = 'https://api.openweathermap.org/data/2.5';\n\nfunction WeatherComp({\n  weatherData\n}) {\n  _s();\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&appid=${API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n\n    fetchData();\n  }, [lat, long]); //chnage the weather icon according to the weather Id\n\n  function get_WeatherIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        return stormIcon;\n\n      case rangeId >= 300 && rangeId <= 321:\n        return rainyIcon;\n\n      case rangeId >= 500 && rangeId <= 521:\n        return rainyIcon;\n\n      case rangeId >= 600 && rangeId <= 622:\n        return snowIcon;\n\n      case rangeId >= 701 && rangeId <= 781:\n        return hazeIcon;\n\n      case rangeId === 800:\n        return sunIcon;\n\n      case rangeId >= 801 && rangeId <= 804:\n        return precipitation;\n\n      default:\n        return cloudIcon;\n        ;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: typeof data.main != 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-container\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        class: \"w-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"city-text\",\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date-text\",\n          children: moment().format(\"dddd \" + 'LL')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp\",\n          children: [Math.round(data.main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"main-icon\",\n          src: get_WeatherIcon(data.weather[0].id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wph-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icon-drop\",\n              src: windIncon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"drop-text\",\n              children: [Math.round(data.wind.speed), \" mph\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"humidity\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icon-drop\",\n              src: humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"drop-text\",\n              children: [Math.round(data.main.humidity), \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"couldCover\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icon-drop\",\n              src: precipitation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"drop-text\",\n              children: data.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"id\", {\n      children: \"Waiting for data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n}\n\n_s(WeatherComp, \"gE/fZZ7pzRi/f0KiE3Gj1Ld/pxs=\");\n\n_c = WeatherComp;\nexport default WeatherComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherComp\");","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Todayweather.js"],"names":["React","moment","windIncon","humidity","precipitation","stormIcon","snowIcon","sunIcon","rainyIcon","useEffect","useState","hazeIcon","cloudIcon","API_KEY","API_URL","WeatherComp","weatherData","lat","setLat","long","setLong","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","console","log","get_WeatherIcon","rangeId","main","name","format","Math","round","temp","weather","id","wind","speed","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport windIncon from \"./icons/wind2.ico\" ;\nimport humidity from \"./icons/waterdrop.ico\";\nimport precipitation from \"./icons/rain.ico\";\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from\"./icons/rain.ico\";\nimport './Todayweather.css';\nimport {useEffect, useState} from \"react\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\"\n\n\nconst API_KEY = \"c49b58637f116ba62e71ca04a520f9bb\";\nconst API_URL='https://api.openweathermap.org/data/2.5';\n\n\n\nfunction WeatherComp ({weatherData})  {\n\n      const [lat, setLat] = useState([]);\n      const [long, setLong] = useState([]);\n      const [data, setData] = useState([]);\n\n      useEffect(() => {\n        const fetchData = async () => {\n          navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude);\n            setLong(position.coords.longitude);\n          });\n\n          await fetch(`${API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&appid=${API_KEY}`)\n          .then(res => res.json())\n          .then(result => {\n            setData(result)\n            console.log(result);\n          });\n        }\n        fetchData();\n      }, [lat,long])\n\n\n      //chnage the weather icon according to the weather Id\n function get_WeatherIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        return(stormIcon);\n      case rangeId >= 300 && rangeId <= 321:\n        return(rainyIcon);\n      case rangeId >= 500 && rangeId <= 521:\n        return(rainyIcon);\n      case rangeId >= 600 && rangeId <= 622:\n        return(snowIcon);\n      case rangeId >= 701 && rangeId <= 781:\n        return(hazeIcon);\n      case rangeId === 800:\n        return(sunIcon);\n      case rangeId >= 801 && rangeId <= 804:\n        return(precipitation);\n      default:\n        return(cloudIcon);;\n    }\n  }\n\nreturn(\n\n<div className=\"weather-container\">\n\n{(typeof data.main != 'undefined') ? (\n      <div className=\"w-container\">\n\n        <main class= \"w-body\">\n\n                    <p className=\"city-text\">{data.name}</p>\n                    <p className=\"date-text\">{moment().format(\"dddd \"+'LL')}</p>\n\n\n                    <p className=\"temp\">{Math.round(data.main.temp)}&deg;C</p>\n                    <img className=\"main-icon\" src={get_WeatherIcon(data.weather[0].id)}></img>\n\n              <div className=\"wph-box\">\n                    <div className=\"wind\">\n                          <img className=\"icon-drop\" src={windIncon}></img>\n                          <p className=\"drop-text\">{Math.round(data.wind.speed)} mph</p>\n                          </div>\n                    <div className=\"humidity\">\n                          <img className=\"icon-drop\" src={humidity}></img>\n                          <p className=\"drop-text\">{Math.round(data.main.humidity)} %</p>\n                          </div>\n                    <div className=\"couldCover\">\n                          <img className=\"icon-drop\" src={precipitation}></img>\n                         <p className=\"drop-text\">{data.weather[0].description}</p>\n                          </div>\n              </div>\n        </main>\n        </div>\n    ): (\n      <id>Waiting for data</id>\n    )}\n</div>\n)\n}\n\nexport default WeatherComp;"]},"metadata":{},"sourceType":"module"}