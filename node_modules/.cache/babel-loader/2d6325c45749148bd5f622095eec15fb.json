{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Card.js\";\nimport React from 'react';\nimport './Card.css';\nimport rain from './icons/rain.ico';\nimport sun from './icons/sun.ico';\nimport clouds from './icons/cloud.ico';\nimport rainSun from './icons/rain&sun.ico';\nimport storm from './icons/storm.ico';\nimport snow from './icons/snow.ico';\n\nclass Card extends React.Component {\n  // Props: day, key(index)\n  render() {\n    let newDate = new Date();\n    const weekday = this.props.day.dt * 1000;\n    newDate.setTime(weekday); // choose an icon based on weather description\n\n    if (this.props.day.weather[0].description.includes(\"light rain\")) {\n      var imgURL = lightRain;\n    } else if (this.props.day.weather[0].description.includes(\"rain\") && this.props.day.weather[0].description.includes(\"sun\")) {\n      var imgURL = rainSun;\n    } else if (this.props.day.weather[0].description.includes(\"rain\")) {\n      var imgURL = rain;\n    } else if (this.props.day.weather[0].description.includes(\"clouds\")) {\n      var imgURL = clouds;\n    } else if (this.props.day.weather[0].description.includes(\"snow\")) {\n      var imgURL = snow;\n    } else if (this.props.day.weather[0].description.includes(\"lightning\") || this.props.day.weather[0].description.includes(\"thunder\")) {\n      var imgURL = storm;\n    } else {\n      var imgURL = sun;\n    } // const farenheit = (parseInt(this.props.day.main.temp) - 273.15) * (9/5) + 32\n    // days and months arrays\n    // will index depending on date returned by API\n\n\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // day will be used to give each \"card\" a unique id\n\n    const day = days[newDate.getDay()];\n    const month = months[newDate.getMonth()]; // called if \"less or more\" button clicked\n\n    function lessOrMore() {\n      // gets elements\n      var dots = document.getElementById(\"dots\" + day);\n      var moreText = document.getElementById(\"more\" + day);\n      var btnText = document.getElementById(\"myBtn\" + day);\n      console.log(\"clicked\"); // if the element exists\n\n      if (dots) {\n        // if dots aren't visible\n        if (dots.style.display === \"none\") {\n          // make dots visible, change button to \"more\", make \"more text\" invisible\n          dots.style.display = \"inline\";\n          btnText.innerHTML = \"Read more\";\n          moreText.style.display = \"none\";\n        } else {\n          // make dots invisible, change button to \"less\", make \"more text\" visible\n          dots.style.display = \"none\";\n          btnText.innerHTML = \"Read less\";\n          moreText.style.display = \"inline\";\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: month + \" \" + newDate.getDate() + \", 18:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: imgURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [Math.round(this.props.day.main.temp), \" \\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: this.props.day.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"dots\" + day,\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"more\" + day,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Feels like \", Math.round(this.props.day.main.feels_like), \" \\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Minimum Temp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Maximum Temp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [Math.round(this.props.day.main.temp_min), \"\\xB0F\", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [Math.round(this.props.day.main.temp_max), \"\\xB0F\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", Math.round(this.props.day.main.humidity)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pressure: \", Math.round(this.props.day.main.pressure)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sea Level: \", Math.round(this.props.day.main.sea_level)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"myBtn\" + day,\n            onClick: lessOrMore,\n            children: \"More Detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Card.js"],"names":["React","rain","sun","clouds","rainSun","storm","snow","Card","Component","render","newDate","Date","weekday","props","day","dt","setTime","weather","description","includes","imgURL","lightRain","days","months","getDay","month","getMonth","lessOrMore","dots","document","getElementById","moreText","btnText","console","log","style","display","innerHTML","getDate","Math","round","main","temp","feels_like","temp_min","temp_max","humidity","pressure","sea_level"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAGA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjC;AAEAC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,EAAf,GAAoB,IAApC;AACAL,IAAAA,OAAO,CAACM,OAAR,CAAgBJ,OAAhB,EAHO,CAKP;;AACA,QAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,YAA/C,CAAH,EAAgE;AAC5D,UAAIC,MAAM,GAAGC,SAAb;AACH,KAFD,MAGK,IAAG,KAAKR,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,MAA/C,KAA0D,KAAKN,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,KAA/C,CAA7D,EAAmH;AACpH,UAAIC,MAAM,GAAGhB,OAAb;AACH,KAFI,MAGA,IAAG,KAAKS,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,MAA/C,CAAH,EAA0D;AAC3D,UAAIC,MAAM,GAAGnB,IAAb;AACH,KAFI,MAGA,IAAG,KAAKY,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,QAA/C,CAAH,EAA4D;AAC7D,UAAIC,MAAM,GAAGjB,MAAb;AACH,KAFI,MAGA,IAAG,KAAKU,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,MAA/C,CAAH,EAA0D;AAC3D,UAAIC,MAAM,GAAGd,IAAb;AACH,KAFI,MAGA,IAAG,KAAKO,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,WAA/C,KAA+D,KAAKN,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC,WAA1B,CAAsCC,QAAtC,CAA+C,SAA/C,CAAlE,EAA4H;AAC7H,UAAIC,MAAM,GAAGf,KAAb;AACH,KAFI,MAGD;AACA,UAAIe,MAAM,GAAGlB,GAAb;AACH,KA1BM,CA4BP;AAEA;AACA;;;AACA,UAAMoB,IAAI,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,WAA7B,EAAyC,UAAzC,EAAoD,QAApD,EAA6D,UAA7D,CAAb;AACA,UAAMC,MAAM,GAAC,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb,CAjCO,CAmCP;;AACA,UAAMT,GAAG,GAACQ,IAAI,CAACZ,OAAO,CAACc,MAAR,EAAD,CAAd;AACA,UAAMC,KAAK,GAACF,MAAM,CAACb,OAAO,CAACgB,QAAR,EAAD,CAAlB,CArCO,CAuCP;;AACA,aAASC,UAAT,GAAsB;AAClB;AACA,UAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAOhB,GAA/B,CAAX;AACA,UAAIiB,QAAQ,GAAGF,QAAQ,CAACC,cAAT,CAAwB,SAAOhB,GAA/B,CAAf;AACA,UAAIkB,OAAO,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAQhB,GAAhC,CAAd;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EALkB,CAOlB;;AACA,UAAGN,IAAH,EAAQ;AACJ;AACA,YAAIA,IAAI,CAACO,KAAL,CAAWC,OAAX,KAAuB,MAA3B,EAAmC;AAC/B;AACAR,UAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,GAAqB,QAArB;AACAJ,UAAAA,OAAO,CAACK,SAAR,GAAoB,WAApB;AACAN,UAAAA,QAAQ,CAACI,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACH,SALD,MAMK;AACD;AACAR,UAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACAJ,UAAAA,OAAO,CAACK,SAAR,GAAoB,WAApB;AACAN,UAAAA,QAAQ,CAACI,KAAT,CAAeC,OAAf,GAAyB,QAAzB;AACH;AACJ;AACA;;AAIL,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BtB;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BW,KAAK,GAAC,GAAN,GAAUf,OAAO,CAAC4B,OAAR,EAAV,GAA4B;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAElB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,qBAAKmB,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBC,IAA/B,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0B,KAAK7B,KAAL,CAAWC,GAAX,CAAeG,OAAf,CAAuB,CAAvB,EAA0BC;AAApD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,EAAE,EAAE,SAAOJ,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,EAAE,EAAE,SAAOA,GAAjB;AAAA,oCACI;AAAA,wCAAeyB,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBE,UAA/B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADzB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAA,uCACI;AAAA,6BAAKJ,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBG,QAA/B,CAAL,wBAAgD;AAAA,+BAAKL,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBI,QAA/B,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAUI;AAAA,uCAAcN,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBK,QAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI;AAAA,uCAAcP,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBM,QAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAYI;AAAA,wCAAeR,IAAI,CAACC,KAAL,CAAW,KAAK3B,KAAL,CAAWC,GAAX,CAAe2B,IAAf,CAAoBO,SAA/B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAiBE;AAAQ,YAAA,EAAE,EAAE,UAAQlC,GAApB;AAAyB,YAAA,OAAO,EAAEa,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AApGgC;;AAyGnC,eAAepB,IAAf","sourcesContent":["import React from 'react';\nimport './Card.css';\nimport rain from './icons/rain.ico'\nimport sun from './icons/sun.ico'\nimport clouds from './icons/cloud.ico'\nimport rainSun from './icons/rain&sun.ico'\nimport storm from './icons/storm.ico'\nimport snow from './icons/snow.ico'\n\n\nclass Card extends React.Component {\n  // Props: day, key(index)\n  \n  render() {\n    let newDate = new Date();\n    const weekday = this.props.day.dt * 1000\n    newDate.setTime(weekday)\n\n    // choose an icon based on weather description\n    if(this.props.day.weather[0].description.includes(\"light rain\")){\n        var imgURL = lightRain\n    }\n    else if(this.props.day.weather[0].description.includes(\"rain\") && this.props.day.weather[0].description.includes(\"sun\")){\n        var imgURL = rainSun\n    }\n    else if(this.props.day.weather[0].description.includes(\"rain\")){\n        var imgURL = rain\n    }\n    else if(this.props.day.weather[0].description.includes(\"clouds\")){\n        var imgURL = clouds\n    }\n    else if(this.props.day.weather[0].description.includes(\"snow\")){\n        var imgURL = snow\n    }\n    else if(this.props.day.weather[0].description.includes(\"lightning\") || this.props.day.weather[0].description.includes(\"thunder\")){\n        var imgURL = storm\n    }\n    else{\n        var imgURL = sun\n    }\n\n    // const farenheit = (parseInt(this.props.day.main.temp) - 273.15) * (9/5) + 32\n\n    // days and months arrays\n    // will index depending on date returned by API\n    const days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n    const months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n    // day will be used to give each \"card\" a unique id\n    const day=days[newDate.getDay()];\n    const month=months[newDate.getMonth()];\n\n    // called if \"less or more\" button clicked\n    function lessOrMore() {\n        // gets elements\n        var dots = document.getElementById(\"dots\"+day);\n        var moreText = document.getElementById(\"more\"+day);\n        var btnText = document.getElementById(\"myBtn\"+day);\n        console.log(\"clicked\")\n\n        // if the element exists\n        if(dots){\n            // if dots aren't visible\n            if (dots.style.display === \"none\") {\n                // make dots visible, change button to \"more\", make \"more text\" invisible\n                dots.style.display = \"inline\";\n                btnText.innerHTML = \"Read more\"; \n                moreText.style.display = \"none\";\n            } \n            else {\n                // make dots invisible, change button to \"less\", make \"more text\" visible\n                dots.style.display = \"none\";\n                btnText.innerHTML = \"Read less\"; \n                moreText.style.display = \"inline\";\n            }\n        }\n        }\n\n    \n\n    return (\n      <div className=\"col-auto\">\n        <div className=\"card\">\n          <h3 className=\"card-title\">{day}</h3>\n          <p className=\"text-muted\">{month+\" \"+newDate.getDate()+\", 18:00\"}</p>\n          <img className=\"icon\" src={imgURL} />\n          <h2>{Math.round(this.props.day.main.temp)} °F</h2>\n          <div className=\"card-body\">\n            <p className=\"card-text\">{this.props.day.weather[0].description}</p>\n            <span id={\"dots\"+day}>...</span>\n            <span id={\"more\"+day}>\n                <p>Feels like {Math.round(this.props.day.main.feels_like)} °F</p>\n                <table>\n                    <thead>\n                        <th>Minimum Temp</th><th>Maximum Temp</th>\n                    </thead>\n                    <tbody>\n                        <tr>{Math.round(this.props.day.main.temp_min)}°F<td>{Math.round(this.props.day.main.temp_max)}°F</td></tr>\n                    </tbody>\n                </table>\n                <p>Humidity: {Math.round(this.props.day.main.humidity)}</p>\n                <p>Pressure: {Math.round(this.props.day.main.pressure)}</p>\n                <p>Sea Level: {Math.round(this.props.day.main.sea_level)}</p>\n            </span>\n            <button id={\"myBtn\"+day} onClick={lessOrMore} >More Detail</button>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n\n  \n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}