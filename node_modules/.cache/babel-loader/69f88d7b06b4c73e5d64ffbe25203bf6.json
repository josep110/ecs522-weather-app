{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Today.js\";\nimport React from 'react';\nimport Todayweather from \"./Todayweather\";\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from \"./icons/rain.ico\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\";\nimport precipitation from \"./icons/rain.ico\";\nconst API_KEY = \"2030f01fb424bf3b7aee4dac694ffd71\";\n\nclass Today extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: \"New York\",\n      country: \"US\",\n      degreeType: \"imperial\",\n      temp: null,\n      lat: 51.51549,\n      lon: -0.12635,\n      wind: null,\n      description: null,\n      humidity: null,\n      rangeId: null,\n      units: \"metric\"\n    };\n\n    this.componentDidMount = () => {\n      var weather_API = `https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&units=${this.state.units}&appid=${API_KEY}`;\n      fetch(weather_API).then(res => res.json()).then(result => {\n        this.setState({\n          weatherData: result,\n          city: result.name,\n          temp: result.main.temp,\n          wind: result.wind.speed,\n          description: result.weather[0].description,\n          humidity: result.main.humidity,\n          rangeId: result.weather[0].id\n        });\n        console.log(\"Result loaded by esther\", result);\n      });\n    };\n  }\n\n  get_WeatherIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        return stormIcon;\n\n      case rangeId >= 300 && rangeId <= 321:\n        return rainyIcon;\n\n      case rangeId >= 500 && rangeId <= 521:\n        return rainyIcon;\n\n      case rangeId >= 600 && rangeId <= 622:\n        return snowIcon;\n\n      case rangeId >= 701 && rangeId <= 781:\n        return hazeIcon;\n\n      case rangeId === 800:\n        return sunIcon;\n\n      case rangeId >= 801 && rangeId <= 804:\n        return precipitation;\n\n      default:\n        return cloudIcon;\n        ;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Todayweather, {\n      City: this.state.city,\n      temperature: this.state.temp,\n      Icon: this.get_WeatherIcon(this.rangeId),\n      Wind: this.state.wind,\n      Humidity: this.state.humidity,\n      Description: this.state.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Today;","map":{"version":3,"sources":["/Users/esthersanchezsanchez/Documents/GitHub/ecs522-weather-app/src/pages/Today.js"],"names":["React","Todayweather","stormIcon","snowIcon","sunIcon","rainyIcon","hazeIcon","cloudIcon","precipitation","API_KEY","Today","Component","state","city","country","degreeType","temp","lat","lon","wind","description","humidity","rangeId","units","componentDidMount","weather_API","fetch","then","res","json","result","setState","weatherData","name","main","speed","weather","id","console","log","get_WeatherIcon","render"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Todayweather from \"./Todayweather\"\nimport stormIcon from \"./icons/storm.ico\";\nimport snowIcon from \"./icons/snow.ico\";\nimport sunIcon from \"./icons/sun.ico\";\nimport rainyIcon from\"./icons/rain.ico\";\nimport hazeIcon from \"./icons/haze.ico\";\nimport cloudIcon from \"./icons/cloud.ico\"\nimport precipitation from \"./icons/rain.ico\";\n\n\nconst API_KEY = \"2030f01fb424bf3b7aee4dac694ffd71\";\n\nclass Today extends React.Component {\n\n      state = {\n        city: \"New York\",\n        country: \"US\",\n        degreeType: \"imperial\",\n        temp:null,\n        lat:51.51549,\n        lon:-0.12635,\n        wind:null,\n      description:null,\n      humidity:null,\n      rangeId:null,\n      units:\"metric\",\n      }\n\n       get_WeatherIcon(rangeId) {\n            switch (true) {\n              case rangeId >= 200 && rangeId < 232:\n                return(stormIcon);\n              case rangeId >= 300 && rangeId <= 321:\n                return(rainyIcon);\n              case rangeId >= 500 && rangeId <= 521:\n                return(rainyIcon);\n              case rangeId >= 600 && rangeId <= 622:\n                return(snowIcon);\n              case rangeId >= 701 && rangeId <= 781:\n                return(hazeIcon);\n              case rangeId === 800:\n                return(sunIcon);\n              case rangeId >= 801 && rangeId <= 804:\n                return(precipitation);\n              default:\n                return(cloudIcon);;\n            }\n          }\n      \n    \n      componentDidMount = () => {\n        \n        var weather_API=`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&units=${this.state.units}&appid=${API_KEY}`;\n    \n        fetch(weather_API)\n        .then(res => res.json())\n        .then(result => {\n          this.setState({weatherData: result,\n            city:result.name,\n            temp:result.main.temp,\n            wind:result.wind.speed,\n            description: result.weather[0].description,\n            humidity:result.main.humidity,\n            rangeId:result.weather[0].id,\n          })\n          console.log( \"Result loaded by esther\",result);\n        });\n    \n       \n      }\n    \n      render(){\n     \n      return (\n      <Todayweather City={this.state.city} temperature={this.state.temp} Icon={this.get_WeatherIcon(this.rangeId)} Wind={this.state.wind} Humidity={this.state.humidity} Description={this.state.description}></Todayweather>\n      );\n    }\n    }\n    \n    export default Today;\n    \n    "]},"metadata":{},"sourceType":"module"}